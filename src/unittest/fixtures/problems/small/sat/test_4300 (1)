;(declare-fun T_1 () Bool)
;(declare-fun T_2 () Bool)
;(declare-fun T_3 () Bool)
;(declare-fun T_4 () Bool)
(declare-fun var_0xINPUT_233890 () String)

;>> Arithmetic Constraints
(assert(= 10 (str.len var_0xINPUT_233890)))
;(assert(= T_1 ( not ( = "4PH2ujcENG" var_0xINPUT_233890 ) )))

;(assert(= T_2 ( not ( not ( = "4PH2ujcENG" var_0xINPUT_233890 ) ) )))    

(assert(= ( not ( not ( = "4PH2ujcENG" var_0xINPUT_233890 ) ) ) ( not ( not ( = "4PH2ujcENG" var_0xINPUT_233890 ) ) )))

;(assert(= T_2 ( not T_1 )))

;(assert(= T_3 ( not ( = var_0xINPUT_233890 "4PH2ujcENG" ) )))

;(assert(= T_4 ( not ( not ( = var_0xINPUT_233890 "4PH2ujcENG" ) ) )))

(assert(= ( not ( not ( = var_0xINPUT_233890 "4PH2ujcENG" ) ) ) ( not ( not ( = var_0xINPUT_233890 "4PH2ujcENG" ) ) )))

;(assert(= T_4 ( not T_3 )))




;>> String Constraints
(assert(= "4PH2ujcENG" var_0xINPUT_233890))
(assert(= var_0xINPUT_233890 "4PH2ujcENG"))

;>> Regular Constraints
;>> Other Constraints

(check-sat)

(get-model)
