(declare-fun I0_6 () Int)
(declare-fun PCTEMP_LHS_1 () Int)
(declare-fun T0_6 () String)
(declare-fun T1_6 () String)
(declare-fun T2_6 () String)
(declare-fun T3_6 () String)
(declare-fun T4_6 () String)
(declare-fun T5_6 () String)
;(declare-fun T_1 () Bool)
;(declare-fun T_2 () Bool)
;(declare-fun T_3 () Bool)
;(declare-fun T_4 () Bool)
;(declare-fun T_6 () Bool)
;(declare-fun T_SELECT_1 () Bool)
(declare-fun var_0xINPUT_15325 () String)

;Arithmetic Constraints
(assert(< ( - 1 ) PCTEMP_LHS_1))
(assert(= (str.len (str.++ T0_6 T1_6)) (str.len var_0xINPUT_15325)))
(assert(= (str.len (str.++ T2_6 T3_6)) (str.len T1_6)))
(assert(= (str.len (str.++ T4_6 T5_6)) (str.len T2_6)))
(assert(= (str.len T4_6) PCTEMP_LHS_1))
(assert(= 0 ( str.len T0_6 )))
(assert(= 0 (+ (str.len T0_6) (str.len T1_6) (* (- 1) (str.len (str.++ T0_6 T1_6))))))
(assert(= 0 (+ (str.len T2_6) (str.len T3_6) (* (- 1) (str.len (str.++ T2_6 T3_6))))))
(assert(= 0 (+ (str.len T4_6) (str.len T5_6) (* (- 1) (str.len (str.++ T4_6 T5_6))))))
(assert(= 0 (str.len T0_6)))
(assert(= 5 (str.len "GASO=")))
(assert(= 5 (str.len T5_6)))
(assert(= I0_6 ( str.len T4_6 )))
(assert(= PCTEMP_LHS_1 ( + I0_6 0 )))
;(assert(= PCTEMP_LHS_1 ( - 1 )))



;(assert(= T_1 ( = "" var_0xINPUT_15325 )))
;(assert(= T_2 ( not T_1 )))
;(assert(= T_3 ( = var_0xINPUT_15325 "" )))
;(assert(= T_4 ( not T_3 )))
;(assert(= T_6 ( < ( - 1 ) PCTEMP_LHS_1 )))
;(assert(= T_SELECT_1 ( not ( = PCTEMP_LHS_1 ( - 1 ) ) )))

;String Constraints
;(assert(= "" var_0xINPUT_15325))
(assert(= T1_6 ( str.++ T2_6 T3_6 )))
(assert(= T2_6 ( str.++ T4_6 T5_6 )))
(assert(= T5_6 "GASO="))
;(assert(= var_0xINPUT_15325 ""))
(assert(= var_0xINPUT_15325 ( str.++ T0_6 T1_6 )))

;Regular Constraints
;(assert(str.in.re T1_6 ( re.++ ( str.to.re "G" ) ( re.++ ( str.to.re "A" ) ( re.++ ( str.to.re "S" ) ( re.++ ( str.to.re "O" ) ( str.to.re "=" ) ) ) ) )))
;(assert(str.in.re T4_6 ( re.++ ( str.to.re "G" ) ( re.++ ( str.to.re "A" ) ( re.++ ( str.to.re "S" ) ( re.++ ( str.to.re "O" ) ( str.to.re "=" ) ) ) ) )))


(assert(not(str.in.re T1_6 ( re.++ ( str.to.re "G" ) ( re.++ ( str.to.re "A" ) ( re.++ ( str.to.re "S" ) ( re.++ ( str.to.re "O" ) ( str.to.re "=" ) ) ) ) ))))
(assert(not(str.in.re T4_6 ( re.++ ( str.to.re "G" ) ( re.++ ( str.to.re "A" ) ( re.++ ( str.to.re "S" ) ( re.++ ( str.to.re "O" ) ( str.to.re "=" ) ) ) ) ))))

;Other Constraints
(assert(and ( = PCTEMP_LHS_1 ( + I0_6 0 ) ) ( = var_0xINPUT_15325 ( str.++ T0_6 T1_6 ) ) ( = I0_6 ( str.len T4_6 ) ) ( = 0 ( str.len T0_6 ) ) ( = T1_6 ( str.++ T2_6 T3_6 ) ) ( = T2_6 ( str.++ T4_6 T5_6 ) ) ( = T5_6 "GASO=" ) ( not ( str.in.re T4_6 ( re.++ ( str.to.re "G" ) ( re.++ ( str.to.re "A" ) ( re.++ ( str.to.re "S" ) ( re.++ ( str.to.re "O" ) ( str.to.re "=" ) ) ) ) ) ) ) ))
;(assert(and ( = PCTEMP_LHS_1 ( - 1 ) ) ( = var_0xINPUT_15325 ( str.++ T0_6 T1_6 ) ) ( = 0 ( str.len T0_6 ) ) ( not ( str.in.re T1_6 ( re.++ ( str.to.re "G" ) ( re.++ ( str.to.re "A" ) ( re.++ ( str.to.re "S" ) ( re.++ ( str.to.re "O" ) ( str.to.re "=" ) ) ) ) ) ) ) ))

(check-sat)

(get-model)
