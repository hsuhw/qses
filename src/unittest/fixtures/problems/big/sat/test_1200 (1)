(declare-fun I0_3 () Int)
(declare-fun I0_7 () Int)
(declare-fun PCTEMP_LHS_1 () Int)
(declare-fun PCTEMP_LHS_2 () Int)
(declare-fun T0_3 () String)
(declare-fun T0_7 () String)
(declare-fun T1_3 () String)
(declare-fun T1_7 () String)
(declare-fun T2_3 () String)
(declare-fun T2_7 () String)
(declare-fun T3_3 () String)
(declare-fun T3_7 () String)
(declare-fun T4_3 () String)
(declare-fun T4_7 () String)
(declare-fun T5_3 () String)
(declare-fun T5_7 () String)
;(declare-fun T_1 () Bool)
;(declare-fun T_3 () Bool)
;(declare-fun T_4 () Bool)
;(declare-fun T_6 () Bool)
;(declare-fun T_7 () Bool)
;(declare-fun T_SELECT_1 () Bool)
;(declare-fun T_SELECT_2 () Bool)
(declare-fun var_0xINPUT_5121 () String)

; Arithmetic Constraints
(assert(and (and (= 0 ( str.len T0_3 )( str.len T0_9 )) (= 0 ( str.len T0_3 ))) (not (< 0 ( str.len T0_3 )))))
(assert(= (str.len (str.++ T0_3 T1_3)) (str.len var_0xINPUT_5121)))
(assert(= (str.len (str.++ T2_3 T3_3)) (str.len T1_3)))
(assert(= (str.len (str.++ T2_7 T3_7)) (str.len T1_7)))
(assert(= (str.len (str.++ T4_3 T5_3)) (str.len T2_3)))
(assert(= (str.len (str.++ T4_7 T5_7)) (str.len T2_7)))
(assert(= (str.len var_0xINPUT_5121) (str.len (str.++ T0_7 T1_7))))
(assert(= 0 ( str.len T0_7 )))
(assert(= 0 (+ (str.len T0_3) (str.len T1_3) (* (- 1) (str.len (str.++ T0_3 T1_3))))))
(assert(= 0 (+ (str.len T0_7) (str.len T1_7) (* (- 1) (str.len (str.++ T0_7 T1_7))))))
(assert(= 0 (+ (str.len T2_3) (str.len T3_3) (* (- 1) (str.len (str.++ T2_3 T3_3))))))
(assert(= 0 (+ (str.len T2_7) (str.len T3_7) (* (- 1) (str.len (str.++ T2_7 T3_7))))))
(assert(= 0 (+ (str.len T4_3) (str.len T5_3) (* (- 1) (str.len (str.++ T4_3 T5_3))))))
(assert(= 0 (+ (str.len T4_7) (str.len T5_7) (* (- 1) (str.len (str.++ T4_7 T5_7))))))
(assert(= 0 (str.len T0_3)))
(assert(= 0 (str.len T0_7)))
(assert(= 1 (str.len "0")))
(assert(= 1 (str.len "1")))
(assert(= 1 (str.len T5_3)))
(assert(>= 1 (str.len T5_7)))
(assert(not (= I0_3 ( str.len T4_3 ))))
(assert(= I0_7 ( str.len T4_7 )))
(assert(= PCTEMP_LHS_1 ( + I0_3 5 )))
;(assert(= PCTEMP_LHS_1 ( - 1 )))
(assert(= PCTEMP_LHS_2 ( + I0_7 0 )))
;(assert(= PCTEMP_LHS_2 ( - 1 )))

;(assert(= T_1 ( not ( = "" var_0xINPUT_5121 ) )))
;(assert(= T_3 ( = PCTEMP_LHS_1 ( - 1 ) )))
;(assert(= T_4 ( not T_3 )))



;(assert(= T_6 ( = PCTEMP_LHS_2 ( - 1 ) )))
;(assert(= T_7 ( not T_6 )))
;(assert(= T_SELECT_1 ( not ( = PCTEMP_LHS_1 ( - 1 ) ) )))
;(assert(= T_SELECT_2 ( not ( = PCTEMP_LHS_2 ( - 1 ) ) )))

;String Constraints
;(assert(= "" var_0xINPUT_5121))
;(assert(not(= "" var_0xINPUT_5121)))
(assert(= T1_3 ( str.++ T2_3 T3_3 )))
(assert(= T1_7 ( str.++ T2_7 T3_7 )))
(assert(= T2_3 ( str.++ T4_3 T5_3 )))
(assert(= T2_7 ( str.++ T4_7 T5_7 )))
(assert(not(not(= T5_3 "?"))))
(assert(= T5_7 "#"))
(assert(= var_0xINPUT_5121 ( str.++ T0_3 T1_3 )))
(assert(= var_0xINPUT_5121 ( str.++ T0_7 T1_7 )))

; Regular Constraints
(assert(str.in.re T1_3 (re.++ ( str.to.re "!" )( str.to.re "?" ))))
(assert(str.in.re T1_7 (re.union (str.to.re "#" ) (str.to.re "#" ))))
(assert(not (str.in.re T4_3 (re.union (str.to.re "#" ) (str.to.re "?" )))))
(assert(str.in.re T4_7 (re.++ (re.* (str.to.re "#" )) (str.to.re "#" ))))

;(assert(not(str.in.re T1_3 ( str.to.re "?" ))))
;(assert(not(str.in.re T1_7 ( str.to.re "#" ))))
;(assert(not(str.in.re T4_3 ( str.to.re "?" ))))
;(assert(not(str.in.re T4_7 ( str.to.re "#" ))))

;Other Constraints
;(assert(and ( = PCTEMP_LHS_1 ( + I0_3 0 ) ) ( = var_0xINPUT_5121 ( str.++ T0_3 T1_3 ) ) ( = I0_3 ( str.len T4_3 ) ) ( = 0 ( str.len T0_3 ) ) ( = T1_3 ( str.++ T2_3 T3_3 ) ) ( = T2_3 ( str.++ T4_3 T5_3 ) ) ( = T5_3 "?" ) ( not ( str.in.re T4_3 ( str.to.re "?" ) ) ) ))
;(assert(and ( = PCTEMP_LHS_1 ( - 1 ) ) ( = var_0xINPUT_5121 ( str.++ T0_3 T1_3 ) ) ( = 0 ( str.len T0_3 ) ) ( not ( str.in.re T1_3 ( str.to.re "?" ) ) ) ))
;(assert(and ( = PCTEMP_LHS_2 ( + I0_7 0 ) ) ( = var_0xINPUT_5121 ( str.++ T0_7 T1_7 ) ) ( = I0_7 ( str.len T4_7 ) ) ( = 0 ( str.len T0_7 ) ) ( = T1_7 ( str.++ T2_7 T3_7 ) ) ( = T2_7 ( str.++ T4_7 T5_7 ) ) ( = T5_7 "#" ) ( not ( str.in.re T4_7 ( str.to.re "#" ) ) ) ))
;(assert(and ( = PCTEMP_LHS_2 ( - 1 ) ) ( = var_0xINPUT_5121 ( str.++ T0_7 T1_7 ) ) ( = 0 ( str.len T0_7 ) ) ( not ( str.in.re T1_7 ( str.to.re "#" ) ) ) ))

(check-sat)

(get-model)
