(declare-fun T_1 () Bool)
(declare-fun T_2 () Bool)
(declare-fun T_3 () Bool)
(declare-fun T_4 () Bool)
(declare-fun T_5 () Bool)
(declare-fun T_6 () Bool)
(declare-fun T_7 () Bool)
(declare-fun T_8 () Bool)
(declare-fun T_9 () Bool)
(declare-fun T_a () Bool)
(declare-fun T_b () Bool)
(declare-fun T_c () Bool)
(declare-fun T_d () Bool)
(declare-fun var_0xINPUT_98487 () String)

(assert(= 10 (str.len var_0xINPUT_98487)))
(assert(= T_1 ( not ( = "fB9De3KAY9" var_0xINPUT_98487 ) )))
(assert(= T_2 ( not T_1 )))
(assert(= T_3 ( not ( = "" var_0xINPUT_98487 ) )))
(assert(= T_4 ( not ( = "6JX7G3VKFq" var_0xINPUT_98487 ) )))
(assert(= T_5 ( not ( = var_0xINPUT_98487 "6JX7G3VKFq" ) )))
(assert(= T_6 ( = var_0xINPUT_98487 "" )))
(assert(= T_7 ( not T_6 )))
(assert(= T_8 ( not ( = "" var_0xINPUT_98487 ) )))
(assert(= T_9 ( not ( = "3s71lxYG6e" var_0xINPUT_98487 ) )))
(assert(= T_a ( not ( = var_0xINPUT_98487 "3s71lxYG6e" ) )))
(assert(= T_b ( = var_0xINPUT_98487 "" )))
(assert(= T_c ( not T_b )))
(assert(= T_d ( not ( = var_0xINPUT_98487 "6JX7G3VKFq" ) )))

;(assert(= "" var_0xINPUT_98487))
;(assert(= "3s71lxYG6e" var_0xINPUT_98487))
;(assert(= "6JX7G3VKFq" var_0xINPUT_98487))
;(assert(= "fB9De3KAY9" var_0xINPUT_98487))
;(assert(= var_0xINPUT_98487 ""))
;(assert(= var_0xINPUT_98487 "3s71lxYG6e"))
(assert(= var_0xINPUT_98487 "6JX7G3VKFq"))

(check-sat)
