(declare-fun I0_12 () Int)
(declare-fun PCTEMP_LHS_1 () Int)
(declare-fun T0_12 () String)
(declare-fun T1_11 () String)
(declare-fun T1_12 () String)
(declare-fun T1_4 () String)
(declare-fun T1_8 () String)
(declare-fun T2_11 () String)
(declare-fun T2_12 () String)
(declare-fun T2_4 () String)
(declare-fun T2_8 () String)
(declare-fun T3_12 () String)
(declare-fun T4_12 () String)
(declare-fun T5_12 () String)
(declare-fun T_1 () String)
;(declare-fun T_2 () Bool)
;(declare-fun T_3 () Bool)
(declare-fun T_4 () String)
;(declare-fun T_5 () Bool)
;(declare-fun T_6 () Bool)
(declare-fun T_7 () String)
;(declare-fun T_9 () Bool)
;(declare-fun T_SELECT_1 () Bool)
(declare-fun var_0xINPUT_10028 () String)

;>> Arithmetic Constraints
(assert(< ( - 1 ) PCTEMP_LHS_1))
(assert(= (str.len (str.++ T1_11 T2_11)) (str.len T_7)))
(assert(= (str.len (str.++ T1_4 T2_4)) (str.len (str.++ T1_11 T2_11))))
(assert(= (str.len (str.++ T1_4 T2_4)) (str.len (str.++ T1_8 T2_8))))
(assert(= (str.len (str.++ T1_4 T2_4)) (str.len T_1)))
(assert(= (str.len (str.++ T1_8 T2_8)) (str.len T_4)))
(assert(= (str.len (str.++ T2_12 T3_12)) (str.len T1_12)))
(assert(= (str.len (str.++ T4_12 T5_12)) (str.len T2_12)))
(assert(= (str.len T4_12) PCTEMP_LHS_1))
(assert(= (str.len T_7) (str.len (str.++ T0_12 T1_12))))
(assert(= (str.len var_0xINPUT_10028) (str.len T2_11)))
(assert(= (str.len var_0xINPUT_10028) (str.len T2_4)))
(assert(= (str.len var_0xINPUT_10028) (str.len T2_8)))
(assert(= 0 ( str.len T0_12 )))
(assert(= 0 (+ (str.len T0_12) (str.len T1_12) (* (- 1) (str.len (str.++ T0_12 T1_12))))))
(assert(= 0 (+ (str.len T1_11) (str.len T2_11) (* (- 1) (str.len (str.++ T1_11 T2_11))))))
(assert(= 0 (+ (str.len T1_4) (str.len T2_4) (* (- 1) (str.len (str.++ T1_4 T2_4))))))
(assert(= 0 (+ (str.len T1_8) (str.len T2_8) (* (- 1) (str.len (str.++ T1_8 T2_8))))))
(assert(= 0 (+ (str.len T2_12) (str.len T3_12) (* (- 1) (str.len (str.++ T2_12 T3_12))))))
(assert(= 0 (+ (str.len T4_12) (str.len T5_12) (* (- 1) (str.len (str.++ T4_12 T5_12))))))
(assert(= 0 (str.len T0_12)))
(assert(= 0 (str.len T1_11)))
(assert(= 0 (str.len T1_4)))
(assert(= 0 (str.len T1_8)))
(assert(= 7 (str.len "utm_id=")))
(assert(= 7 (str.len T5_12)))
(assert(= I0_12 ( str.len T4_12 )))
(assert(= PCTEMP_LHS_1 ( + I0_12 0 )))
(assert(= PCTEMP_LHS_1 ( - 1 )))


;(assert(= T_2 ( = "" T_1 )))
;(assert(= T_3 ( not T_2 )))
;(assert(= T_5 ( = T_4 "" )))
;(assert(= T_6 ( not T_5 )))
;(assert(= T_9 ( < ( - 1 ) PCTEMP_LHS_1 )))
;(assert(= T_SELECT_1 ( not ( = PCTEMP_LHS_1 ( - 1 ) ) )))

;>> String Constraints
(assert(= "" T_1))
(assert(= T1_11 ""))
(assert(= T1_12 ( str.++ T2_12 T3_12 )))
(assert(= T1_4 ""))
(assert(= T1_8 ""))
(assert(= T2_11 var_0xINPUT_10028))
(assert(= T2_12 ( str.++ T4_12 T5_12 )))
(assert(= T2_4 var_0xINPUT_10028))
(assert(= T2_8 var_0xINPUT_10028))
(assert(= T5_12 "utm_id="))
(assert(= T_1 ( str.++ T1_4 T2_4 )))
(assert(= T_4 ""))
(assert(= T_4 ( str.++ T1_8 T2_8 )))
(assert(= T_7 ( str.++ T0_12 T1_12 )))
(assert(= T_7 ( str.++ T1_11 T2_11 )))

;>> Regular Constraints
(assert(str.in.re T1_12 ( re.++ ( str.to.re "u" ) ( re.++ ( str.to.re "t" ) ( re.++ ( str.to.re "m" ) ( re.++ ( str.to.re "_" ) ( re.++ ( str.to.re "i" ) ( re.++ ( str.to.re "d" ) ( str.to.re "=" ) ) ) ) ) ) )))
(assert(str.in.re T4_12 ( re.++ ( str.to.re "u" ) ( re.++ ( str.to.re "t" ) ( re.++ ( str.to.re "m" ) ( re.++ ( str.to.re "_" ) ( re.++ ( str.to.re "i" ) ( re.++ ( str.to.re "d" ) ( str.to.re "=" ) ) ) ) ) ) )))

;>> Other Constraints
(assert(and ( = PCTEMP_LHS_1 ( + I0_12 0 ) ) ( = T_7 ( str.++ T0_12 T1_12 ) ) ( = I0_12 ( str.len T4_12 ) ) ( = 0 ( str.len T0_12 ) ) ( = T1_12 ( str.++ T2_12 T3_12 ) ) ( = T2_12 ( str.++ T4_12 T5_12 ) ) ( = T5_12 "utm_id=" ) ( not ( str.in.re T4_12 ( re.++ ( str.to.re "u" ) ( re.++ ( str.to.re "t" ) ( re.++ ( str.to.re "m" ) ( re.++ ( str.to.re "_" ) ( re.++ ( str.to.re "i" ) ( re.++ ( str.to.re "d" ) ( str.to.re "=" ) ) ) ) ) ) ) ) ) ))
(assert(and ( = PCTEMP_LHS_1 ( - 1 ) ) ( = T_7 ( str.++ T0_12 T1_12 ) ) ( = 0 ( str.len T0_12 ) ) ( not ( str.in.re T1_12 ( re.++ ( str.to.re "u" ) ( re.++ ( str.to.re "t" ) ( re.++ ( str.to.re "m" ) ( re.++ ( str.to.re "_" ) ( re.++ ( str.to.re "i" ) ( re.++ ( str.to.re "d" ) ( str.to.re "=" ) ) ) ) ) ) ) ) ) ))

(check-sat)
(get-model)
